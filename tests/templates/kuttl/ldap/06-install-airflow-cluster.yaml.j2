apiVersion: kuttl.dev/v1beta1
kind: TestStep
metadata:
  name: install-airflow-db
timeout: 480
commands:
  - script: |
      kubectl apply -n $NAMESPACE -f - <<EOF
      ---
      apiVersion: v1
      kind: Secret
      metadata:
        name: test-airflow-credentials
      type: Opaque
      stringData:
        adminUser.username: airflow
        adminUser.firstname: Airflow
        adminUser.lastname: Admin
        adminUser.email: airflow@airflow.com
        adminUser.password: airflow
        connections.secretKey: thisISaSECRET_1234
        connections.sqlalchemyDatabaseUri: postgresql+psycopg2://airflow:airflow@airflow-postgresql/airflow
        connections.celeryResultBackend: db+postgresql://airflow:airflow@airflow-postgresql/airflow
        connections.celeryBrokerUrl: redis://:redis@airflow-redis-master:6379/0
      ---
      apiVersion: v1
      kind: Secret
      metadata:
        name: airflow-with-ldap-bind-secret
        labels:
          secrets.stackable.tech/class: airflow-with-ldap-bind
      stringData:
        user: cn=admin,dc=example,dc=org
        password: admin
      ---
      apiVersion: airflow.stackable.tech/v1alpha1
      kind: AirflowCluster
      metadata:
        name: airflow
      spec:
        image:
          productVersion: "{{ test_scenario['values']['airflow-latest'].split('-stackable')[0] }}"
          stackableVersion: "{{ test_scenario['values']['airflow-latest'].split('-stackable')[1] }}"
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
        vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
        executor: CeleryExecutor
        loadExamples: true
        exposeConfig: false
        credentialsSecret: test-airflow-credentials
        authenticationConfig:
          authenticationClass: {% if test_scenario['values']['ldap-authentication'] == 'no-tls' -%}
              no-tls-$NAMESPACE
            {%- elif test_scenario['values']['ldap-authentication'] == 'insecure-tls' -%}
              insecure-tls-$NAMESPACE
            {%- elif test_scenario['values']['ldap-authentication'] == 'server-verification-tls' -%}
              server-tls-$NAMESPACE
            {%- endif %}

          userRegistrationRole: Admin
        webservers:
          config:
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
        workers:
          config:
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
        schedulers:
          config:
            logging:
              enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
          roleGroups:
            default:
              replicas: 1
