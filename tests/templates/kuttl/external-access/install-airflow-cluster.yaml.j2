---
apiVersion: v1
kind: Secret
metadata:
  name: test-airflow-credentials
type: Opaque
stringData:
  adminUser.username: airflow
  adminUser.firstname: Airflow
  adminUser.lastname: Admin
  adminUser.email: airflow@airflow.com
  adminUser.password: airflow
  connections.secretKey: thisISaSECRET_1234
  connections.sqlalchemyDatabaseUri: postgresql+psycopg2://airflow:airflow@airflow-postgresql/airflow
  connections.celeryResultBackend: db+postgresql://airflow:airflow@airflow-postgresql/airflow
  connections.celeryBrokerUrl: redis://:redis@airflow-redis-master:6379/0
---
apiVersion: airflow.stackable.tech/v1alpha1
kind: AirflowCluster
metadata:
  name: airflow
spec:
  image:
{% if test_scenario['values']['airflow'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['airflow'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['airflow'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['airflow'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    loadExamples: false
    credentialsSecret: test-airflow-credentials
  webservers:
    config:
      listenerClass: test-external-stable-$NAMESPACE
      resources:
        cpu:
          min: 1000m
          max: 2000m
        memory:
          limit: 2Gi
    roleGroups:
      default:
        replicas: 1
      external-unstable:
        replicas: 1
        config:
          listenerClass: test-external-unstable-$NAMESPACE
      cluster-internal:
        replicas: 1
        config:
          listenerClass: test-cluster-internal-$NAMESPACE
{% if test_scenario['values']['executor'] == 'celery' %}
  celeryExecutors:
    roleGroups:
      default:
        replicas: 1
{% elif test_scenario['values']['executor'] == 'kubernetes' %}
  kubernetesExecutors:
    config:
      resources:
        cpu:
          min: 100m
          max: 500m
        memory:
          limit: 1Gi
{% endif %}
  schedulers:
    config:
      resources:
        cpu:
          min: 1000m
          max: 2000m
        memory:
          limit: 1Gi
    roleGroups:
      default:
        replicas: 1
