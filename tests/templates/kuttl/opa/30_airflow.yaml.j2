# $NAMESPACE will be replaced with the namespace of the test case.
---
apiVersion: v1
kind: Secret
metadata:
  name: airflow-credentials
type: Opaque
stringData:
  adminUser.username: airflow
  adminUser.firstname: Airflow
  adminUser.lastname: Admin
  adminUser.email: airflow@airflow.com
  adminUser.password: airflow
  connections.secretKey: thisISaSECRET_1234
  connections.sqlalchemyDatabaseUri: postgresql+psycopg2://airflow:airflow@airflow-postgresql/airflow
---
apiVersion: v1
kind: Secret
metadata:
  name: airflow-keycloak-client
stringData:
  clientId: airflow
  clientSecret: R1bxHUD569vHeQdw
---
apiVersion: airflow.stackable.tech/v1alpha1
kind: AirflowCluster
metadata:
  name: airflow
spec:
  image:
{% if test_scenario['values']['airflow'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['airflow'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['airflow'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['airflow'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    authentication:
      - authenticationClass: keycloak-$NAMESPACE
        oidc:
          clientCredentialsSecret: airflow-keycloak-client
        userRegistrationRole: Admin
    credentialsSecret: airflow-credentials
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  webservers:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    envOverrides:
      AIRFLOW__CORE__AUTH_MANAGER: opa_auth_manager.opa_fab_auth_manager.OpaFabAuthManager
    roleGroups:
      default:
        replicas: 1
  kubernetesExecutors:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
  schedulers:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
