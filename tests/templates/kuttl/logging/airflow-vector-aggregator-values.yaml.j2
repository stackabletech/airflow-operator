---
role: Aggregator
service:
  ports:
  - name: api
    port: 8686
    protocol: TCP
    targetPort: 8686
  - name: vector
    port: 6123
    protocol: TCP
    targetPort: 6000
customConfig:
  api:
    address: 0.0.0.0:8686
    enabled: true
  sources:
    vector:
      address: 0.0.0.0:6000
      type: vector
      version: "2"
  transforms:
    filteredAutomaticLogConfigWebserverAirflow:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-webserver-automatic-log-config-0" &&
        .container == "airflow"
    filteredAutomaticLogConfigWebserverVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-webserver-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigWebserverAirflow:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-webserver-custom-log-config-0" &&
        .container == "airflow"
    filteredCustomLogConfigWebserverVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-webserver-custom-log-config-0" &&
        .container == "vector"
    filteredAutomaticLogConfigWorkerAirflow:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-worker-automatic-log-config-0" &&
        .container == "airflow"
    filteredAutomaticLogConfigWorkerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-worker-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigWorkerAirflow:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-worker-custom-log-config-0" &&
        .container == "airflow"
    filteredCustomLogConfigWorkerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-worker-custom-log-config-0" &&
        .container == "vector"
    filteredAutomaticLogConfigSchedulerAirflow:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-scheduler-automatic-log-config-0" &&
        .container == "airflow"
    filteredAutomaticLogConfigSchedulerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-scheduler-automatic-log-config-0" &&
        .container == "vector"
    filteredCustomLogConfigSchedulerAirflow:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-scheduler-custom-log-config-0" &&
        .container == "airflow"
    filteredCustomLogConfigSchedulerVector:
      type: filter
      inputs: [vector]
      condition: >-
        .pod == "airflow-scheduler-custom-log-config-0" &&
        .container == "vector"
    filteredAutomaticLogConfigInitDb:
      type: filter
      inputs: [vector]
      condition: .container == "airflow-init-db"
    filteredInvalidEvents:
      type: filter
      inputs: [vector]
      condition: |-
        .timestamp == from_unix_timestamp!(0) ||
        is_null(.level) ||
        is_null(.logger) ||
        is_null(.message)
  sinks:
    out:
      inputs: [filtered*]
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
      type: vector
      address: {{ lookup('env', 'VECTOR_AGGREGATOR') }}
      buffer:
        # Avoid back pressure from VECTOR_AGGREGATOR. The test should
        # not fail if the aggregator is not available.
        when_full: drop_newest
{% else %}
      type: blackhole
{% endif %}
